Index: main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main\r\n\r\nimport (\r\n\t\"errors\"\r\n\t\"fmt\"\r\n\t\"strconv\"\r\n)\r\n\r\nconst usd_eur = 0.88\r\nconst usd_rub = 78.48\r\nconst eur_rub = usd_rub / usd_eur\r\n\r\ntype converter = map[string]map[string]float64\r\n\r\nfunc UserScan() (string, string, float64) {\r\n\tvar from string\r\n\tvar to string\r\n\tvar money string\r\n\tvar money_float64 float64\r\n\tfmt.Print(\"Введите переводимую валюту(USD,EUR,RU) \")\r\n\tfmt.Scan(&from)\r\n\terr := CurrencyScan(from)\r\n\tfor err != nil {\r\n\t\tfmt.Println(err)\r\n\t\tfmt.Scan(&from)\r\n\t\terr = CurrencyScan(from)\r\n\t}\r\n\tfmt.Println(\"Введите количество денег \")\r\n\tfor {\r\n\t\tfmt.Scan(&money)\r\n\t\tmoney1, err := strconv.ParseFloat(money, 64)\r\n\t\tif err == nil && money1 > 0 {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tfmt.Println(\"Значение меньше 0 или не является числом, введите значение ещё раз\")\r\n\t}\r\n\tmoney_float64, _ = strconv.ParseFloat(money, 64)\r\n\tfmt.Print(\"Введите целевую валюту\")\r\n\tswitch from {\r\n\tcase \"USD\":\r\n\t\tfmt.Println(\"(RU,EUR) \")\r\n\tcase \"EUR\":\r\n\t\tfmt.Println(\"(RU,USD) \")\r\n\tcase \"RU\":\r\n\t\tfmt.Println(\"(USD,EUR) \")\r\n\t}\r\n\tfmt.Scan(&to)\r\n\terr = CurrencyScan(to)\r\n\tfor err != nil || to == from {\r\n\t\tfmt.Println(\"Валюта введена неверно, введите снова\")\r\n\t\tfmt.Scan(&to)\r\n\t\terr = CurrencyScan(to)\r\n\t}\r\n\treturn from, to, money_float64\r\n}\r\nfunc CurrencyScan(value string) error {\r\n\tif value != \"USD\" && value != \"EUR\" && value != \"RU\" {\r\n\t\treturn errors.New(\"Валюта введена неверно, введите снова\")\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc Convert(from, to string, money float64) float64 {\r\n\tconvert := converter{}\r\n\tconvert[\"USD\"] = map[string]float64{\"EUR\": money * usd_eur, \"RU\": money * usd_rub}\r\n\tconvert[\"RU\"] = map[string]float64{\"EUR\": money / usd_rub * usd_eur, \"USD\": money / usd_rub}\r\n\tconvert[\"EUR\"] = map[string]float64{\"RU\": money * eur_rub, \"USD\": money / usd_eur}\r\n\treturn convert[from][to]\r\n}\r\n\r\nfunc main() {\r\n\tvar from, to string\r\n\tvar money float64\r\n\tfrom, to, money = UserScan()\r\n\tfmt.Println(\"Переведённые деньги\", Convert(from, to, money))\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.go b/main.go
--- a/main.go	(revision f06cf46a93455dc9b4c50a510c875c4309b9ec63)
+++ b/main.go	(date 1750454153223)
@@ -60,17 +60,21 @@
 	return nil
 }
 
-func Convert(from, to string, money float64) float64 {
-	convert := converter{}
-	convert["USD"] = map[string]float64{"EUR": money * usd_eur, "RU": money * usd_rub}
-	convert["RU"] = map[string]float64{"EUR": money / usd_rub * usd_eur, "USD": money / usd_rub}
-	convert["EUR"] = map[string]float64{"RU": money * eur_rub, "USD": money / usd_eur}
-	return convert[from][to]
-}
-
-func main() {
+func Converter() {
 	var from, to string
 	var money float64
 	from, to, money = UserScan()
-	fmt.Println("Переведённые деньги", Convert(from, to, money))
+	convert := converter{}
+	Convert(money, &convert)
+	fmt.Println("Переведённые деньги", convert[from][to])
+}
+
+func Convert(money float64, convert *converter) {
+	(*convert)["USD"] = map[string]float64{"EUR": money * usd_eur, "RU": money * usd_rub}
+	(*convert)["RU"] = map[string]float64{"EUR": money / usd_rub * usd_eur, "USD": money / usd_rub}
+	(*convert)["EUR"] = map[string]float64{"RU": money * eur_rub, "USD": money / usd_eur}
+}
+
+func main() {
+	Converter()
 }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_41__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_41__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_41__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_41__Changes_.xml	(revision f06cf46a93455dc9b4c50a510c875c4309b9ec63)
+++ /dev/null	(revision f06cf46a93455dc9b4c50a510c875c4309b9ec63)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_11_06_2025_1_41_[Changes]" date="1749595262530" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_41_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11.06.2025 1:41 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_43_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_43_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_43_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_43_[Changes]/shelved.patch	(revision f06cf46a93455dc9b4c50a510c875c4309b9ec63)
+++ /dev/null	(revision f06cf46a93455dc9b4c50a510c875c4309b9ec63)
@@ -1,112 +0,0 @@
-Index: main.go
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc UserScan() (string, string, int) {\r\n\tvar from string\r\n\tvar to string\r\n\tvar money int\r\n\tfmt.Scan(&from, &to, &money)\r\n\treturn from, to, money\r\n}\r\nfunc Convert(from, to string, money int) int {\r\n\treturn 0\r\n}\r\n\r\nfunc main() {\r\n\tconst usd_eur = 0.88\r\n\tconst usd_rub = 77.5\r\n\tconst eur_rub = usd_rub / usd_eur\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/main.go b/main.go
---- a/main.go	(revision 27cc0dec0f4a3f3d25646d34ade32dd564726735)
-+++ b/main.go	(date 1749595415080)
-@@ -1,20 +1,90 @@
- package main
- 
--import "fmt"
-+import (
-+	"errors"
-+	"fmt"
-+	"strconv"
-+)
- 
--func UserScan() (string, string, int) {
-+const usd_eur = 0.88
-+const usd_rub = 78.48
-+const eur_rub = usd_rub / usd_eur
-+
-+func UserScan() (string, string, float64) {
- 	var from string
- 	var to string
--	var money int
--	fmt.Scan(&from, &to, &money)
--	return from, to, money
--}
--func Convert(from, to string, money int) int {
--	return 0
-+	var money string
-+	var money_float64 float64
-+	fmt.Print("Введите переводимую валюту(USD,EUR,RU) ")
-+	fmt.Scan(&from)
-+	err := CurrencyScan(from)
-+	for err != nil {
-+		fmt.Println(err)
-+		fmt.Scan(&from)
-+		err = CurrencyScan(from)
-+	}
-+	fmt.Println("Введите количество денег ")
-+	for {
-+		fmt.Scan(&money)
-+		money1, err := strconv.ParseFloat(money, 64)
-+		if err == nil && money1 > 0 {
-+			break
-+		}
-+		fmt.Println("Значение меньше 0 или не является числом, введите значение ещё раз")
-+	}
-+	money_float64, _ = strconv.ParseFloat(money, 64)
-+	fmt.Print("Введите целевую валюту")
-+	switch from {
-+	case "USD":
-+		fmt.Println("(RU,EUR) ")
-+	case "EUR":
-+		fmt.Println("(RU,USD) ")
-+	case "RU":
-+		fmt.Println("(USD,EUR) ")
-+	}
-+	fmt.Scan(&to)
-+	err = CurrencyScan(to)
-+	for err != nil || to == from {
-+		fmt.Println("Валюта введена неверно, введите снова")
-+		fmt.Scan(&to)
-+		err = CurrencyScan(to)
-+	}
-+	return from, to, money_float64
-+}
-+func CurrencyScan(value string) error {
-+	if value != "USD" && value != "EUR" && value != "RU" {
-+		return errors.New("Валюта введена неверно, введите снова")
-+	}
-+	return nil
-+}
-+
-+func Convert(from, to string, money float64) float64 {
-+	fmt.Println(from, to, money)
-+	switch from {
-+	case "USD":
-+		if to == "EUR" {
-+			return money * usd_eur
-+		} else {
-+			return money * usd_rub
-+		}
-+	case "EUR":
-+		if to == "RU" {
-+			return money * eur_rub
-+		} else {
-+			return money / usd_eur
-+		}
-+	case "RU":
-+		if to == "USD" {
-+			return money / usd_rub
-+		} else {
-+			return money / usd_rub * usd_eur
-+		}
-+	}
- }
- 
- func main() {
--	const usd_eur = 0.88
--	const usd_rub = 77.5
--	const eur_rub = usd_rub / usd_eur
-+	var from, to string
-+	var money float64
-+	from, to, money = UserScan()
-+	fmt.Println("Переведённые деньги", Convert(from, to, money))
- }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_43__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_43__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_43__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_43__Changes_.xml	(revision f06cf46a93455dc9b4c50a510c875c4309b9ec63)
+++ /dev/null	(revision f06cf46a93455dc9b4c50a510c875c4309b9ec63)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_11_06_2025_1_43_[Changes]" date="1749595417309" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_43_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11.06.2025 1:43 [Changes]" />
-</changelist>
\ No newline at end of file
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_41_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_06_2025_1_41_[Changes]/shelved.patch
deleted file mode 100644
