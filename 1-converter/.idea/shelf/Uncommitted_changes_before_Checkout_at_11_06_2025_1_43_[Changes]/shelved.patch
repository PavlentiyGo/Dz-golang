Index: main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc UserScan() (string, string, int) {\r\n\tvar from string\r\n\tvar to string\r\n\tvar money int\r\n\tfmt.Scan(&from, &to, &money)\r\n\treturn from, to, money\r\n}\r\nfunc Convert(from, to string, money int) int {\r\n\treturn 0\r\n}\r\n\r\nfunc main() {\r\n\tconst usd_eur = 0.88\r\n\tconst usd_rub = 77.5\r\n\tconst eur_rub = usd_rub / usd_eur\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.go b/main.go
--- a/main.go	(revision 27cc0dec0f4a3f3d25646d34ade32dd564726735)
+++ b/main.go	(date 1749595415080)
@@ -1,20 +1,90 @@
 package main
 
-import "fmt"
+import (
+	"errors"
+	"fmt"
+	"strconv"
+)
 
-func UserScan() (string, string, int) {
+const usd_eur = 0.88
+const usd_rub = 78.48
+const eur_rub = usd_rub / usd_eur
+
+func UserScan() (string, string, float64) {
 	var from string
 	var to string
-	var money int
-	fmt.Scan(&from, &to, &money)
-	return from, to, money
-}
-func Convert(from, to string, money int) int {
-	return 0
+	var money string
+	var money_float64 float64
+	fmt.Print("Введите переводимую валюту(USD,EUR,RU) ")
+	fmt.Scan(&from)
+	err := CurrencyScan(from)
+	for err != nil {
+		fmt.Println(err)
+		fmt.Scan(&from)
+		err = CurrencyScan(from)
+	}
+	fmt.Println("Введите количество денег ")
+	for {
+		fmt.Scan(&money)
+		money1, err := strconv.ParseFloat(money, 64)
+		if err == nil && money1 > 0 {
+			break
+		}
+		fmt.Println("Значение меньше 0 или не является числом, введите значение ещё раз")
+	}
+	money_float64, _ = strconv.ParseFloat(money, 64)
+	fmt.Print("Введите целевую валюту")
+	switch from {
+	case "USD":
+		fmt.Println("(RU,EUR) ")
+	case "EUR":
+		fmt.Println("(RU,USD) ")
+	case "RU":
+		fmt.Println("(USD,EUR) ")
+	}
+	fmt.Scan(&to)
+	err = CurrencyScan(to)
+	for err != nil || to == from {
+		fmt.Println("Валюта введена неверно, введите снова")
+		fmt.Scan(&to)
+		err = CurrencyScan(to)
+	}
+	return from, to, money_float64
+}
+func CurrencyScan(value string) error {
+	if value != "USD" && value != "EUR" && value != "RU" {
+		return errors.New("Валюта введена неверно, введите снова")
+	}
+	return nil
+}
+
+func Convert(from, to string, money float64) float64 {
+	fmt.Println(from, to, money)
+	switch from {
+	case "USD":
+		if to == "EUR" {
+			return money * usd_eur
+		} else {
+			return money * usd_rub
+		}
+	case "EUR":
+		if to == "RU" {
+			return money * eur_rub
+		} else {
+			return money / usd_eur
+		}
+	case "RU":
+		if to == "USD" {
+			return money / usd_rub
+		} else {
+			return money / usd_rub * usd_eur
+		}
+	}
 }
 
 func main() {
-	const usd_eur = 0.88
-	const usd_rub = 77.5
-	const eur_rub = usd_rub / usd_eur
+	var from, to string
+	var money float64
+	from, to, money = UserScan()
+	fmt.Println("Переведённые деньги", Convert(from, to, money))
 }
